import { createTransportStrategy } from './transports';
import { executeNetworkRequest, NetworkRequest, RequestOptions } from './request';
import { createResumingStrategy } from './resuming-subscription';
import { createRetryStrategyOptionsOrDefault, DoNotRetry, Retry, RetryResolution, RetryStrategyOptions, RetryStrategyResult } from './retry-strategy';
import { TokenProvider } from './token-provider';
import { Subscription, SubscriptionListeners, SubscriptionEvent } from './subscription';
import { default as Instance, ResumableSubscribeOptions, SubscribeOptions } from './instance';
import { BaseClient, BaseClientOptions } from './base-client';
import { Logger, ConsoleLogger, EmptyLogger } from './logger';
import { createRetryingStrategy } from './retrying-subscription';
import { createTokenProvidingStrategy } from './token-providing-subscription';
import { ElementsHeaders, ErrorResponse, NetworkError, responseToHeadersObject, XhrReadyState } from './network';
export { Instance, SubscribeOptions, ResumableSubscribeOptions, SubscriptionListeners, SubscriptionEvent, BaseClient, BaseClientOptions, Subscription, createResumingStrategy, createRetryingStrategy, createTokenProvidingStrategy, createTransportStrategy, ElementsHeaders, responseToHeadersObject, ErrorResponse, NetworkError, XhrReadyState, RequestOptions, NetworkRequest, executeNetworkRequest, RetryStrategyResult, Retry, DoNotRetry, RetryStrategyOptions, RetryResolution, createRetryStrategyOptionsOrDefault, TokenProvider, Logger, ConsoleLogger, EmptyLogger };
declare const _default: {
    Instance: typeof Instance;
    BaseClient: typeof BaseClient;
    ConsoleLogger: typeof ConsoleLogger;
    EmptyLogger: typeof EmptyLogger;
};
export default _default;
